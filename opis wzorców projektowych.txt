Kompozyt - wzorzec w którym obiekty są skomponowane w hierarchii drzewiastej. Taka hierarchia nazywana jest właśnie kompozytem. Pozwala nam operować na kompozycie tak jakby był pojedyńczym obiektem
Obserwator - wzorzec który ma na celu eliminacje nadmiarowych zależności pomiędzy klasami. Działa analogicznie do subskrypcji czasopisma w realnym świecie - powiadamiane są tylko osoby-obiekty które wyraziły chęć bycia powiadamianym 
Strategia - wzorzec polegający na rozdzieleniu/hermetyzacji pojedyńczych różnych algorytmów mających na celu rozwiązanie tego samego problemu. Pozwala to oddzielić obiekt zlecający np. policzenie potęgi od samego sposobu wykonywania żądanego działania. Pozwala nam wykorzystanie kompozycji zamiast dziedziczenia. 
Metoda Wytwórcza - polega na zamianie konstruktorów klasy na statyczne metody zwracające nowy obiekt. Ułatwia to działanie na obiektach wytworzonych metodą wytwórczą, ponieważ metoda wytwórcza każdej podklasy zwraca obiekty danej podklasy. Pozwala to w przyszłości zaimplementowanie zwracanie obiektów z puli obiektów.
Dekorator - polega na dodaniu dodatkowej funkcjonalności klasy bez ingerencji w samą klasę. Dokonujemy tego implementując w "nakładce" ten sam interfejs który ma klasa którą chcemy rozszerzyć o nową funkcjonalność. W ten sposób "nakładka" deleguje wszystkie otrzymywane żądania do klasy, a sama jedynie może czasem zmienić rezultat działać dokonując działać przed lub po przekazaniu żądania. 